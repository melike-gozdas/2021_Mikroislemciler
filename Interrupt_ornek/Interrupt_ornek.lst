;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22.06.2021 10:28:23
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x285E      	GOTO       94
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A8      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A7      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x087B      	MOVF       R11, 0
0x000C	0x00A2      	MOVWF      34
0x000D	0x087C      	MOVF       R12, 0
0x000E	0x00A1      	MOVWF      33
0x000F	0x087D      	MOVF       R13, 0
0x0010	0x00A0      	MOVWF      32
;Interrupt_ornek.c,11 :: 		void interrupt()
;Interrupt_ornek.c,13 :: 		if(intcon.intf==1) //if INT0 interrupt occured
0x0011	0x1C8B      	BTFSS      INTCON, 1
0x0012	0x2837      	GOTO       L_interrupt0
;Interrupt_ornek.c,15 :: 		portd.b0 = ~portd.b0; //toggle pin D0
0x0013	0x3001      	MOVLW      1
0x0014	0x0688      	XORWF      PORTD, 1
;Interrupt_ornek.c,16 :: 		for(i = 0; i < 100; i++)
0x0015	0x01A3      	CLRF       _i
0x0016	0x01A4      	CLRF       _i+1
L_interrupt1:
0x0017	0x3080      	MOVLW      128
0x0018	0x0624      	XORWF      _i+1, 0
0x0019	0x00F0      	MOVWF      R0
0x001A	0x3080      	MOVLW      128
0x001B	0x0270      	SUBWF      R0, 0
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2820      	GOTO       L__interrupt11
0x001E	0x3064      	MOVLW      100
0x001F	0x0223      	SUBWF      _i, 0
L__interrupt11:
0x0020	0x1803      	BTFSC      STATUS, 0
0x0021	0x2836      	GOTO       L_interrupt2
;Interrupt_ornek.c,18 :: 		porte = i;
0x0022	0x0823      	MOVF       _i, 0
0x0023	0x0089      	MOVWF      PORTE
;Interrupt_ornek.c,19 :: 		delay_ms(300);
0x0024	0x3004      	MOVLW      4
0x0025	0x00FB      	MOVWF      R11
0x0026	0x300C      	MOVLW      12
0x0027	0x00FC      	MOVWF      R12
0x0028	0x3033      	MOVLW      51
0x0029	0x00FD      	MOVWF      R13
L_interrupt4:
0x002A	0x0BFD      	DECFSZ     R13, 1
0x002B	0x282A      	GOTO       L_interrupt4
0x002C	0x0BFC      	DECFSZ     R12, 1
0x002D	0x282A      	GOTO       L_interrupt4
0x002E	0x0BFB      	DECFSZ     R11, 1
0x002F	0x282A      	GOTO       L_interrupt4
0x0030	0x0000      	NOP
0x0031	0x0000      	NOP
;Interrupt_ornek.c,16 :: 		for(i = 0; i < 100; i++)
0x0032	0x0AA3      	INCF       _i, 1
0x0033	0x1903      	BTFSC      STATUS, 2
0x0034	0x0AA4      	INCF       _i+1, 1
;Interrupt_ornek.c,20 :: 		}
0x0035	0x2817      	GOTO       L_interrupt1
L_interrupt2:
;Interrupt_ornek.c,21 :: 		intcon.intf=0; //reset INT0 flag mutlka sýfýrlamalýyýz
0x0036	0x108B      	BCF        INTCON, 1
;Interrupt_ornek.c,22 :: 		}
L_interrupt0:
;Interrupt_ornek.c,23 :: 		}
L_end_interrupt:
L__interrupt10:
0x0037	0x0822      	MOVF       34, 0
0x0038	0x00FB      	MOVWF      R11
0x0039	0x0821      	MOVF       33, 0
0x003A	0x00FC      	MOVWF      R12
0x003B	0x0820      	MOVF       32, 0
0x003C	0x00FD      	MOVWF      R13
0x003D	0x0827      	MOVF       ___savePCLATH, 0
0x003E	0x008A      	MOVWF      PCLATH
0x003F	0x0E28      	SWAPF      ___saveSTATUS, 0
0x0040	0x0083      	MOVWF      STATUS
0x0041	0x0EFF      	SWAPF      R15, 1
0x0042	0x0E7F      	SWAPF      R15, 0
0x0043	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x1303      	BCF        STATUS, 6
0x0046	0x0826      	MOVF       ___DoICPAddr+1, 0
0x0047	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0048	0x0825      	MOVF       ___DoICPAddr, 0
0x0049	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x004A	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x004B	0x2044      	CALL       _____DoICP
0x004C	0x118A      	BCF        PCLATH, 3
0x004D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x004E	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x004F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0050	0x0AA5      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0051	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0052	0x0AA6      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0053	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0054	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0055	0x284B      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0056	0x0008      	RETURN
; end of ___CC2DW
_init_interrupt:
;Interrupt_ornek.c,3 :: 		void init_interrupt()
;Interrupt_ornek.c,5 :: 		option_reg.intedg=0; //select Interrupt on falling edge of INT0 pin
0x0057	0x1683      	BSF        STATUS, 5
0x0058	0x1303      	BCF        STATUS, 6
0x0059	0x1301      	BCF        OPTION_REG, 6
;Interrupt_ornek.c,6 :: 		intcon.inte=1; //enable port INT0 external interrupt
0x005A	0x160B      	BSF        INTCON, 4
;Interrupt_ornek.c,7 :: 		intcon.PEIE=1; //Enables all unmasked peripheral interrupts
0x005B	0x170B      	BSF        INTCON, 6
;Interrupt_ornek.c,8 :: 		intcon.gie=1; //enable global interrupts
0x005C	0x178B      	BSF        INTCON, 7
;Interrupt_ornek.c,9 :: 		}
L_end_init_interrupt:
0x005D	0x0008      	RETURN
; end of _init_interrupt
_main:
0x005E	0x1283      	BCF        STATUS, 5
0x005F	0x1303      	BCF        STATUS, 6
0x0060	0x01A3      	CLRF       _i
0x0061	0x01A4      	CLRF       36
;Interrupt_ornek.c,24 :: 		void main()
;Interrupt_ornek.c,26 :: 		init_interrupt(); //iterrupt initiallisation
0x0062	0x2057      	CALL       _init_interrupt
;Interrupt_ornek.c,27 :: 		trisb.b0=1; //INT0 pin as input
0x0063	0x1406      	BSF        TRISB, 0
;Interrupt_ornek.c,28 :: 		trisd = 0; portd = 0; // D port as output
0x0064	0x0188      	CLRF       TRISD
0x0065	0x1283      	BCF        STATUS, 5
0x0066	0x0188      	CLRF       PORTD
;Interrupt_ornek.c,29 :: 		trise = 0; porte = 0; // E port as output for(i = 0; i < 100; i++)
0x0067	0x1683      	BSF        STATUS, 5
0x0068	0x0189      	CLRF       TRISE
0x0069	0x1283      	BCF        STATUS, 5
0x006A	0x0189      	CLRF       PORTE
;Interrupt_ornek.c,31 :: 		portd = i;
0x006B	0x0823      	MOVF       _i, 0
0x006C	0x0088      	MOVWF      PORTD
;Interrupt_ornek.c,32 :: 		delay_ms(300);
0x006D	0x3004      	MOVLW      4
0x006E	0x00FB      	MOVWF      R11
0x006F	0x300C      	MOVLW      12
0x0070	0x00FC      	MOVWF      R12
0x0071	0x3033      	MOVLW      51
0x0072	0x00FD      	MOVWF      R13
L_main5:
0x0073	0x0BFD      	DECFSZ     R13, 1
0x0074	0x2873      	GOTO       L_main5
0x0075	0x0BFC      	DECFSZ     R12, 1
0x0076	0x2873      	GOTO       L_main5
0x0077	0x0BFB      	DECFSZ     R11, 1
0x0078	0x2873      	GOTO       L_main5
0x0079	0x0000      	NOP
0x007A	0x0000      	NOP
;Interrupt_ornek.c,34 :: 		while(1)
L_main6:
;Interrupt_ornek.c,36 :: 		asm sleep;
0x007B	0x0063      	SLEEP
;Interrupt_ornek.c,37 :: 		}
0x007C	0x287B      	GOTO       L_main6
;Interrupt_ornek.c,38 :: 		}
L_end_main:
0x007D	0x287D      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [64]    _interrupt
0x0044       [7]    _____DoICP
0x004B      [12]    ___CC2DW
0x0057       [7]    _init_interrupt
0x005E      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0023       [2]    _i
0x0025       [2]    ___DoICPAddr
0x0027       [1]    ___savePCLATH
0x0028       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0088       [1]    TRISD
0x0089       [1]    TRISE
